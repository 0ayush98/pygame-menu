
.. module:: pygameMenu.sound

=============
Adding sounds
=============

A sound engine can be created using the :py:class:`Sound` class. The sound engine can be customized by setting a sound
file to several sounds defined by a type.

For example, buttons or keys...

**Example:**

.. code-block:: python

    import pygameMenu
    from pygameMenu import sound

    engine = sound.Sound()
    engine.set_sound(sound.SOUND_TYPE_CLICK_MOUSE, '/home/me/click.ogg')
    engine.set_sound(sound.SOUND_TYPE_OPEN_MENU, '/home/me/open.ogg')

    menu = pygameMenu.Menu(...)
    menu.set_sound(engine, recursive=True)  # Apply on menu and all sub-menus

Sound types are the following:

======================================  =============================
Type                                    Description
======================================  =============================
:py:data:`SOUND_TYPE_CLICK_MOUSE`       Mouse click
:py:data:`SOUND_TYPE_CLOSE_MENU`        A menu is closed
:py:data:`SOUND_TYPE_ERROR`             Generic error
:py:data:`SOUND_TYPE_EVENT`             Generic event
:py:data:`SOUND_TYPE_EVENT_ERROR`       Error generated by user
:py:data:`SOUND_TYPE_KEY_ADDITION`      User type a key
:py:data:`SOUND_TYPE_KEY_DELETION`      User deletes with a key
:py:data:`SOUND_TYPE_OPEN_MENU`         A menu is opened
======================================  =============================

.. autoclass:: Sound
    :members:
